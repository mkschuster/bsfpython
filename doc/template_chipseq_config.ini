# Copyright 2013 - 2021 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.
#
#
# BSF Python configuration template for the bsf.analyses.chipseq.ChIPSeq class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.chipseq.ChIPSeq]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# analysis output directory defined via the "output_directory" option below.

project_name =

# Cache Directory Path (optional)
#
# The cache directory is used by the bsf.procedure.Runnable and its
# sub-classes to copy certain files to a local cache such as the shared memory
# or the temporary directory for performance reasons.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_cache(),
# which is based on the "cache" option of the "directories" section of the
# global configuration file. If set to an empty string, a cache directory will
# not be used.
#
# cache_directory =

# Input Directory Path (optional)
#
# The analysis input directory, which is used to initialise the NGS Collection
# and thus to look up Sample, ReadGroup and Reads file paths.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_samples(absolute=True),
# which is configured via the "sample" option in the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# input_directory =

# Output Directory Path (optional)
#
# The analysis output directory.
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_projects(absolute=True),
# which is based on the "projects" option of the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# output_directory =

# Genome Assembly Version (optional)
#
# The genome assembly version corresponds to a configuration section in the
# global configuration file and is linked to a resource directory holding the
# genome sequence, index and accessory files.
# It is also the name of a new sub-directory under the analysis output directory
# and links to UCSC Genome Browser Track Hubs.
#
# Defaults to the genome assembly version associated with the transcriptome version.
#
# genome_version =

# Sample Annotation Sheet (mandatory)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of
# ProcessedRunFolder, Project, Sample, PairedReads and Reads objects.
# Additionally, the file type (i.e. 'CASAVA' or 'External') can be specified
# for automatic discovery of objects in CASAVA-processed run folders.
#
# Defaults to file name "<project_name>_<genome_version>_<chipseq>_samples.csv"
# in the current working directory.
# Not required for some analyses.

sas_file =

# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column names.
# It can be useful to distinguish e.g. 'Control Sample' objects from
# 'Treatment Sample' objects defined within the same sample annotation sheet.
#
# Defaults to an empty string, which implies no additional prefix.
#
# sas_prefix =

# Operator e-Mail Address (optional)
#
# An operator e-mail address mainly required for UCSC Genome Browser Track Hubs.
#
# Defaults to the value of bsf.standards.Operator.get_email(), which is based on
# the "e_mail" option of the "operator" section of the global configuration file.
#
# e_mail =

# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug =

# Sample Comparison File (optional)
#
# The comparison file specifies, which samples or groups should be
# compared.
#
# Defaults to file name "<project_name>_<genome_version>_<chipseq>_comparisons.csv"

# cmp_file =

# Group PairedReads objects (optional)
#
# Process PairedReads of a Sample in one group or individually:
#   true (i.e., all PairedReads objects as a single process) or
#   false (i.e., each PairedReads object as a separate process)
#
# Defaults to true to process all PairedReads objects of a Sample as one group.
#
# replicate_grouping =

# UCSC Genome Browser Track Hub default RGB colour (optional)
#
# Defaults to '0,0,0' i.e. black
#
# colour_default =

# Default factor (optional)
#
# Defaults to 'OTHER'
#
# factor_default =

# Genome sizes (optional)
#
# The genome_sizes are required for the BED to BigBed conversion.
#
# Defaults to the FASTA index file defined for the genome.
#
# genome_sizes =

# Reference Transcriptome Version (mandatory)
#
# The reference transcriptome version corresponds to a resource directory
# holding the transcriptome annotation files.

transcriptome_version =

# Reference Transcriptome GTF (optional)
#
# A GTF file defines the reference transcriptome. If the path is not absolute,
# standard directory paths from bsf.standards.StandardFilePath get prepended.
#
# Defaults to a transcriptome_version.basic.gtf or transcriptome_version.gtf file.
#
# transcriptome_gtf =

# Reference Transcriptome TxDb (optional)
#
# A Bioconductor TxDb (SQLite) transcriptome database. If the path is not absolute,
# standard directory paths from bsf.standards.StandardFilePath get prepended.
#
# Defaults to a transcriptome_version.basic.sqlite or transcriptome_version.sqlite file.
#
# transcriptome_txdb =

# A [bsf.analysis.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a description of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.chipseq.ChIPSeq.TrackHubColours]
# Christoph Bock's ChIP-Seq default track colours.
# All ChIP-Seq factors are indexed in upper case.
OTHER = 0,200,100
HIGH = 57,39,140
MEDIUM = 144,144,144
LOW = 173,0,33
H2 = 102,51,204

# The following have been prefixed with H3,
# a distinction needed for shallow peak calling.
H3K4ME1 = 204,255,51
H3K4ME2 = 61,245,0
H3K4ME3 = 39,143,68
H3K9ME1 = 153,153,153
H3K9ME2 = 112,112,112
H3K9ME3 = 51,51,51
H3K27ME1 = 255,117,71
H3K27ME2 = 255,71,10
H3K27ME3 = 235,38,39
H3K36ME1 = 20,99,255
H3K36ME2 = 0,71,214
H3K36ME3 = 24,97,174
H3K20ME1 = 225,133,35
H3K20ME2 = 175,102,24
H3K20ME3 = 141,25,28

H4 = 204,153,255
AC = 153,0,77

H3K27AC = 153,0,77
H3K56AC = 153,0,77
H4K16AC = 153,0,77

K4ME1 = 204,255,51
K4ME2 = 61,245,0
K4ME3 = 39,143,68
K9ME1 = 153,153,153
K9ME2 = 112,112,112
K9ME3 = 51,51,51
K27ME1 = 255,117,71
K27ME2 = 255,71,10
K27ME3 = 235,38,39
K36ME1 = 20,99,255
K36ME2 = 0,71,214
K36ME3 = 24,97,174
K20ME1 = 225,133,35
K20ME2 = 175,102,24
K20ME3 = 141,25,28

CTCF = 204,153,0
POL = 204,51,77
EZH2 = 0,128,153
SUZ12 = 128,204,51
RING = 204,204,51
P300 = 204,0,0
INPUT = 153,179,204
WCE = 153,179,204

[bsf.analyses.chipseq.ChIPSeq.Stage]
memory_hard = 2G

[bsf.analyses.chipseq.ChIPSeq.Stage.chipseq_alignment]
memory_hard = 4G

[bsf.analyses.chipseq.ChIPSeq.Stage.chipseq_peak_calling]
# MACS2 is significantly memory-hungrier than version 1.4.
memory_hard = 56G

[bsf.analyses.chipseq.ChIPSeq.Stage.chipseq_diff_bind]
memory_hard = 56G

# RunnableStep sections configure individual RunnableStep instances.

[bsf.analyses.chipseq.ChIPSeq.macs2_call_peak]

[bsf.analyses.chipseq.ChIPSeq.macs2_call_peak.callpeak]
# All options in this section directly correspond to Model-based
# Analysis for ChIP-Seq (MACS) version 2 command line options.
# See https://github.com/taoliu/MACS/

--gsize = hs

[bsf.analyses.chipseq.ChIPSeq.macs2_bdg_cmp]

[bsf.analyses.chipseq.ChIPSeq.macs2_bdg_cmp.bdgcmp]
# All options in this section directly correspond to
# MACS2 command line options.
# See http://liulab.dfci.harvard.edu/MACS/
