# Copyright 2013 - 2021 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.
#
#
# BSF Python site-specific default configuration template.
#
# This file needs site-specific edits and installation as $HOME/.bsfpython.ini
#


# Default Java Archive (JAR) file paths

[java_archive]

# Fulcrum Genomics (fgbio) Java Archive (JAR) file path

fgbio =

# Broad Genome Analysis Tool Kit Java Archive (JAR) file path

gatk =

# Picard Java Archive (JAR) file path

picard =

# snpEff Java Archive (JAR) file path

snpeff =

# Trimmomatic Java Archive (JAR) file path

trimmomatic =

# VCF.Filter Java Archive (JAR) file path

vcf_filter =


# Default Java Class Path directory paths

[java_classpath]

# Illumina2bam Java Class Path directory path

illumina2bam =


# Default directory layout

[directories]

# Cache directory on a local machine

cache = /dev/shm

# General home directory

home =

# Illumina Run Folder (IRF) directory
# Relative paths are prepended with the "home" directory.

illumina_run = illumina_run

# Illumina Sequence Analysis (SAV) directory
# Relative paths are prepended with the "home" directory.

illumina_sav = illumina_sav

# Lane-specific sequences in BAM format directory
# Relative paths are prepended with the "home" directory.

sequences = sequences

# Sample-specific sequences in BAM format directory
# Relative paths are prepended with the "home" directory.

samples = samples

# Analysis projects directory
# Relative paths are prepended with the "home" directory.

projects = projects

# Web server export directory
# Relative paths are prepended with the "home" directory.

public_html = public_html

# HTML template documents directory
# Relative paths are prepended with the "home" directory.

template_documents = template_documents

# Submission template scripts directory
# Relative paths are prepended with the "home" directory.

template_scripts = template_scripts

# Resources directory
# Relative paths are prepended with the "home" directory.

resources = resources

# Genome resources directory
# Relative paths are prepended with the "resources" directory.

genomes = genomes

# Transcriptome resources directory
# Relative paths are prepended with the "resources" directory.

transcriptomes = transcriptomes

# Broad Genome Analysis Tool Kit data bundle resources directory
# Relative paths are prepended with the "resources" directory.

gatk_bundle = GATK

# Picard-style interval_list files,
# mainly for target enrichment experiments.
# Relative paths are prepended with the "resources" directory.

intervals = intervals

# Combined Annotation Dependent Depletion (CADD) resources directory
# Relative paths are prepended with the "resources" directory.

cadd = CADD

# Catalogue Of Somatic Mutations In Cancer (COSMIC) resources directory
# Relative paths are prepended with the "resources" directory.

cosmic = COSMIC

# UCSC Genome Browser resource directory
# Relative paths are prepended with the "resources" directory.

ucsc = UCSC

# snpEff resources directory
# Relative paths are prepended with the "resources" directory.

snpeff_data =


# Default indices

[indices]

bwa = indices_for_BWA
bowtie1 = indices_for_Bowtie1
bowtie2 = indices_for_Bowtie2
hisat2 = indices_for_Hisat2
kallisto = indices_for_Kallisto
star = indices_for_STAR
tophat = indices_for_TopHat


# Operator information

[operator]

# Contact e-mail address for Analysis report HTML pages

contact =

# Operator e-mail address for UCSC Genome Browser Track Hubs

e_mail =

# Institution name

institution = the Biomedical Sequencing Facility

# Sequencing Centre

sequencing_centre = BSF


# Information about secrets

[secrets]

# Azure file path

azure_file_path =

# MySQL file path

mysql_file_path =


# Genome Assembly Information

[genome_b37]
black_list =
date = February 2009
description = Homo sapiens GRCh37 Reference Genome Assembly by the
              1000 Genomes Project (February 2009)
effective_size = 2864785220
fasta_suffix = fasta
provider = 1000 Genomes Project based on Genome Reference Consortium GRCh37
species = Homo sapiens
ucsc = hg19

[genome_b37_sars_cov2]
black_list =
date = February 2009
description = Homo sapiens GRCh37 Reference Genome Assembly by the
              1000 Genomes Project (February 2009) and
              Severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2)
effective_size = 2864785220
fasta_suffix = fasta
provider = 1000 Genomes Project based on Genome Reference Consortium GRCh37 and NCBI RefSeq
species = Homo sapiens and SARS-Cov-2
ucsc = hg19

[genome_galGal5]
black_list =
date = December 2015
fasta_suffix = fa
species = Gallus gallus

[genome_hg19]
black_list =
date = February 2009
description = Homo sapiens GRCh37/hg19 Reference Genome Assembly (February 2009)
fasta_suffix = fa
provider = UCSC Genome Browser based on Genome Reference Consortium GRCh37
species = Homo sapiens

[genome_hg38]
black_list = ENCFF419RSJ.bed
date = December 2013
description = Homo sapiens GRCh38/hg38 Reference Genome Assembly (December 2013)
effective_size = 2913022398
fasta_suffix = fa
provider = UCSC Genome Browser based on Genome Reference Consortium GRCh38
species = Homo sapiens

[genome_hg38_hhv6a]
black_list = ENCFF419RSJ.bed
date = December 2013
description = Homo sapiens GRCh38/hg38 Reference Genome Assembly (December 2013)
effective_size = 2913022398
fasta_suffix = fa
provider = UCSC Genome Browser based on Genome Reference Consortium GRCh38
species = Homo sapiens and HHV6a
ucsc = hg38

[genome_hg38_sars_cov2]
black_list = ENCFF419RSJ.bed
date = December 2013
description = Homo sapiens GRCh38/hg38 Reference Genome Assembly (December 2013) and
              Severe acute respiratory syndrome coronavirus 2 (SARS-Cov-2)
effective_size = 2913022398
fasta_suffix = fa
provider = UCSC Genome Browser based on Genome Reference Consortium GRCh38 and NCBI RefSeq
species = Homo sapiens and SARS-Cov-2

[genome_mm10]
black_list = ENCFF547MET.bed
date = December 2011
description = Mus musculus GRCm38/mm10 Reference Genome Assembly (December 2011)
effective_size = 2652783500
fasta_suffix = fa
provider = UCSC Genome Browser based on Genome Reference Consortium GRCm37
species = Mus musculus

[genome_mm10_lcmv]
black_list = ENCFF547MET.bed
date = December 2011
description = Mus musculus GRCm38/mm10 Reference Genome Assembly (December 2011)
fasta_suffix = fa
provider = UCSC Genome Browser based on Genome Reference Consortium GRCm38
species = Mus musculus and LCMV
ucsc = mm10

[genome_sarHar1]
black_list =
date = February 2011
fasta_suffix = fa
description = Sarcophilus harrisii sarHar1 Reference Genome Assembly (February 2011)
species = Sarcophilus harrisii

[genome_GRCh37]
black_list =
date = February 2009
description = Homo sapiens GRCh37 Reference Genome Assembly (February 2009)
effective_size = 2864785220
fasta_suffix = fa
provider = Genome Reference Consortium (GRC)
species = Homo sapiens
ucsc = hg19
uri = "ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.75.dna_sm.primary_assembly.fa.gz"

[genome_GRCh38]
black_list =
date = December 2013
description = Homo sapiens GRCh38 Reference Genome Assembly (December 2013)
effective_size = 2913022398
fasta_suffix = fa
provider = Genome Reference Consortium (GRC)
species = Homo sapiens
ucsc = hg38

[genome_GRCm38]
black_list =
date = December 2011
description = Mus musculus GRCm38 Reference Genome Assembly (December 2011)
effective_size = 2652783500
fasta_suffix = fa
provider = Genome Reference Consortium (GRC)
species = Mus musculus
ucsc = mm10

[genome_MesAur1.0]
black_list =
date = December 2012
description = Mesocricetus auratus Reference Genome Assembly (December 2012)
effective_size = 2076159990
fasta_suffix = fa
provider = Broad Institute
species = Mesocricetus auratus
ucsc =

[genome_MesAur1.0_havc2]
# https://www.ncbi.nlm.nih.gov/nuccore/NC_001405
black_list =
date = December 2012
description = Mesocricetus auratus Reference Genome Assembly (December 2012) and
              Human adenovirus C2
effective_size = 2076159990
fasta_suffix = fa
provider = Broad Institute and NCBI RefSeq
species = Mesocricetus auratus and Human mastadenovirus C2
ucsc = MesAur1.0

[genome_MesAur1.0_havc5]
# https://www.ncbi.nlm.nih.gov/nuccore/AC_000008
black_list =
date = December 2012
description = Mesocricetus auratus Reference Genome Assembly (December 2012) and
              Human adenovirus C5
effective_size = 2076159990
fasta_suffix = fa
provider = Broad Institute and NCBI RefSeq
species = Mesocricetus auratus and Human mastadenovirus C5
ucsc = MesAur1.0


# Transcriptome Information

[transcriptome_b37_e87]
date = December 2016
description = Homo sapiens Ensembl Transcriptome Annotation e87 (December 2016)
genome = b37
species = Homo sapiens

[transcriptome_hg38_e87]
date = December 2016
description = Homo sapiens Ensembl Transcriptome Annotation e87 (December 2016)
genome = hg38
species = Homo sapiens

[transcriptome_hg38_e96]
date = April 2019
description = Homo sapiens Ensembl Transcriptome Annotation e96 (April 2019)
genome = hg38
species = Homo sapiens

[transcriptome_hg38_e99]
date = January 2020
description = Homo sapiens Ensembl Transcriptome Annotation e99 (January 2020)
genome = hg38
species = Homo sapiens

[transcriptome_hg38_sars_cov2_e99]
date = January 2020
description = Homo sapiens Ensembl Transcriptome Annotation e99 (January 2020) and
              NCBI RefSeq Severe acute respiratory syndrome coronavirus 2 (SARS-Cov-2)
genome = hg38_sars_cov2
species = Homo sapiens and SARS-Cov-2

[transcriptome_mm10_e87]
date = December 2016
description = Mus musculus Ensembl Transcriptome Annotation e87 (December 2016)
genome = mm10
species = Mus musculus

[transcriptome_mm10_e96]
date = April 2019
description = Mus musculus Ensembl Transcriptome Annotation e96 (April 2019)
genome = mm10
species = Mus musculus

[transcriptome_mm10_e99]
date = January 2020
description = Mus musculus Ensembl Transcriptome Annotation e99 (January 2020)
genome = mm10
species = Mus musculus

[transcriptome_galGal5_e91]
date = December 2017
description = Gallus gallus Ensembl Transcriptome Annotation e91 (December 2017)
genome = galGal5
species = Gallus gallus

[transcriptome_sarHar1_e94]
date = December 2011
description = Sarcophilus harrisii Ensembl Transcriptome Annotation e94 (December 2011)
genome = sarHar1
species = Sarcophilus harrisii

[transcriptome_MesAur1.0_e98]
black_list =
date = September 2019
description = Mesocricetus auratus Ensembl Transcriptome Annotation e98 (September 2019)
genome = MesAur1.0
species = Mesocricetus auratus

[transcriptome_MesAur1.0_havc2_e98]
black_list =
date = September 2019
description = Mesocricetus auratus Ensembl Transcriptome Annotation e98 (September 2019)
genome = MesAur1.0_havc2
species = Mesocricetus auratus and Human mastadenovirus C2

[transcriptome_MesAur1.0_havc5_e98]
black_list =
date = September 2019
description = Mesocricetus auratus Ensembl Transcriptome Annotation e98 (September 2019)
genome = MesAur1.0_havc5
species = Mesocricetus auratus and Human mastadenovirus C5


# Ensembl Variant Effect Predictor (VEP) configuration per genome version

[ensembl_vep_{genome_version}]

# Sub-directory for Ensembl Variant Effect Predictor (VEP) cache files

directory_cache =

# Sub directory for Ensembl Variant Effect Predictor (VEP) FASTA files

directory_fasta =

# Sub-directory for Ensembl Variant Effect Predictor (VEP) plug-ins

directory_plugin =

# Sub-directory for Ensembl Variant Effect Predictor (VEP) source files

directory_source =

# Genome assembly version for the Ensembl Variant Effect Predictor (VEP)

name_assembly =

# Species name for Ensembl Variant Effect Predictor (VEP)

name_species =

# SQL database user name

sql_user =

# SQL database password

sql_pass =

# SQL database host

sql_host =

# SQL database TCP/IP port

sql_port =

# VEP output fields configuration (TSV) file path (optional)

ofc_path =

# VEP Sequence Ontology configuration (TSV) file path (optional)

soc_path =

# VEP NCBI RefSeq alignments (BAM) file path

refseq_alignments_path =

# VEP Combined Annotation Dependent Depletion (CADD) file path (optional)

cadd_path =


# snpEff configuration section

[snpeff_{genome_version}]

# snpEff genome version
genome_version =


# UCSC Genome Browser configuration

[ucsc]

# UCSC Genome Browser URL protocol (i.e. http, https, ...)

protocol = http

# UCSC Genome Browser URL host name (e.g., genome.ucsc.edu, genome-euro.ucsc.edu, ...)

host_name = genome-euro.ucsc.edu


# Uniform Resource Locator (URL) configuration for a project web-server

[url]

# URL protocol (e.g., http, ftp, ...)

protocol = https

# URL host name

host_name = biomedical-sequencing.at

# URL relative directory for DNA sequences

relative_dna = dna

# URL relative directory for projects

relative_projects = projects


# Vendor Quality Filter setting

[vendor_quality_filter]
# Configure vendor quality filtering for each flow cell chemistry.
# False disables filtering, while True enables it.
# Newer HiSeq 3000/4000 instruments with printed flow cells routinely show 25% to 30% non pass-filter reads,
# which are quite costly in processing, but cannot be de-multiplexed.

# HiSeq <RunParameters>/<Setup>/<Flowcell>
HiSeq Flow Cell v1 = False
HiSeq Flow Cell v1.5 = False
HiSeq Flow Cell v3 = False
HiSeq Flow Cell v4 = False
HiSeq Rapid Flow Cell v2 = False
HiSeq 3000/4000 PE = True
HiSeq 3000/4000 SR = True

# MiSeq <RunParameters>/<ReagentKitVersion>
Version2 = False
Version3 = False

# NextSeq <RunParameters>/<Chemistry>
NextSeq High = False
NextSeq Mid = False

# NovaSeq <RunParameters>/<RfidsInfo>/<FlowCellMode>
S1 = True
S2 = True
S4 = True
SP = True


#########
# Stage #
#########

# Global configuration for the Stage class

[bsf.analysis.Stage]

# Values here are generally implementation specific,
# since they are usually passed on as they are specified here.

hold =

# Distributed Resource Management System (DRMS) Implementation (mandatory)
#
# The specific implementation of the DRMS to submit processes into.
#
# Valid options are "sge", "slurm" or "bash" and correspond to modules
# bsf.drms.bash, bsf.drms.sge and bsf.drms.slurm,
# respectively.

implementation = slurm

is_script = True

# Memory Limits per Process (optional)
#
# Generally, the minimum free memory requirements have to be met,
# before a process is started by the Stage.
#
memory_free_mem =
memory_free_swap =
memory_free_virtual =
#
# The soft and hard memory limits warn and subsequently kill a process,
# respectively.
#
memory_hard = 512M
memory_soft =

# List of nodes to exclude (optional)

node_list_exclude =

# List of nodes to include (optional)

node_list_include =

# Time Limit per Process (optional)
#
# The run (wall) time limit of a process.

time_limit = 12:00:00

# Stage Parallel Environment (optional)
#
# The parallel environment defines how multi-threaded processes are run.
# Values are depending on the Stage implementation.

parallel_environment = block

# Stage Queue (optional)
#
# The SGE queue or SLURM partition to submit jobs into.

queue = shortq

# Stage Threads (optional)
#
# The number of threads defines how many parallel processes can run
# in each parallel environment.
#
# Defaults to 1.

threads = 1


############################
# IlluminaRunFolderArchive #
############################

# Global configuration for the IlluminaRunFolderArchive class.

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive]

# Illumina Run Folder (irf) directory access mode permission bits (optional)
#
# A comma-separated list of directory access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
irf_mode_directory = S_IRUSR, S_IWUSR, S_IXUSR, S_IRGRP, S_IXGRP

# Illumina Sequence Analysis Viewer (SAV) directory access mode permission bits (optional)
#
# A comma-separated list of directory access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
sav_mode_directory = S_IRUSR, S_IXUSR, S_IRGRP, S_IXGRP

# Illumina Run Folder (IRF) file access mode permission bits (optional)
#
# A comma-separated list of file access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
irf_mode_file = S_IRUSR, S_IWUSR, S_IRGRP

# Illumina Sequence Analysis Viewer (SAV) file access mode permission bits (optional)
#
# A comma-separated list of file access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
sav_mode_file = S_IRUSR, S_IRGRP

# Microsoft Azure Storage Account name (optional)
#
# Defaults to an empty string, in which case the service will not be used.
#
# cloud_account =

# Microsoft Azure Storage Blob Service container name (optional)
#
# Defaults to an empty string, in which case the service will not be used.
#
# cloud_container =

# Microsoft Azure Storage Blob Service path prefix (optional)
#
# Defaults to an empty string, in which case no prefix will be used.
#
# cloud_path_prefix =

# Microsoft Azure Blob Storage concurrency value (optional)
#
# Defaults to 1
#
# cloud_concurrency =

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage]
memory_hard =
queue =
time_limit =

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_pre_process]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_base_calls]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_intensities]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_folder]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_post_process]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_sav]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderArchive.Stage.irf_archive_cloud]


############################
# IlluminaRunFolderRestore #
############################

# Global configuration for the IlluminaRunFolderRestore class.

[bsf.analyses.illumina_run_folder.IlluminaRunFolderRestore]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderRestore.Stage]
memory_hard =
queue =
time_limit =

[bsf.analyses.illumina_run_folder.IlluminaRunFolderRestore.Stage.irf_restore_extract_archive]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderRestore.Stage.irf_restore_compress_base_calls]

[bsf.analyses.illumina_run_folder.IlluminaRunFolderRestore.Stage.irf_restore_compress_logs]


###############################
# Picard IlluminaMultiplexSam #
###############################

[bsf.analyses.picard.IlluminaMultiplexSam]

# Illumina Run Folder File Path (mandatory)
#
# Both, user and variable expansion gets applied. If, at that point,
# the path is still relative, default directory path from
# bsf.standards.StandardFilePath.get_illumina_run(absolute=True) gets prepended.

illumina_run_folder =

# Illumina Run Folder Experiment Name (optional)
#
# The experiment name is defined at the initialisation of a run on the instrument.
#
# Defaults to the value specified in XML configuration files in the Illumina Run Folder.
# Therefore, only explicitly specify to override.
#
# experiment_name =

# Sequencing Centre (optional)
#
# Defaults to the value of bsf.standards.Operator.get_sequencing_centre()
#
# sequencing_centre =

# Sequences Directory File Path (optional)
#
# The directory, in which the project-specific sequences directory with archive BAM files will be created.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_sequences(absolute=True).
#
# sequences_directory =

# Directory access mode permission bits (optional)
#
# A comma-separated list of directory access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
# mode_directory = S_IRUSR, S_IXUSR, S_IRGRP, S_IXGRP, S_IROTH, S_IXOTH

# File access mode permission bits (optional)
#
# A comma-separated list of file access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
# mode_file = S_IRUSR, S_IRGRP, S_IROTH

# Illumina EAMSS Filter (optional)
#
# Apply the Illumina EAMSS filter.
#
# Defaults to false
#
# eamss_filter =

# Picard Compression level (optional)
#
# Set the Picard (Zlib) Compression level. Valid level range from 0 to 9.
#
# Defaults to the Picard default setting, currently 5.
#
# compression_level =

# Microsoft Azure Storage Account name (optional)
#
# Defaults to an empty string, in which case the service will not be used.
#
# cloud_account =

# Microsoft Azure Storage Blob Service container name (optional)
#
# Defaults to an empty string, in which case the service will not be used.
#
# cloud_container =

# Microsoft Azure Blob Storage concurrency value (optional)
#
# Defaults to 1
#
# cloud_concurrency =

[bsf.analyses.picard.IlluminaMultiplexSam.Stage]

[bsf.analyses.picard.IlluminaMultiplexSam.Stage.illumina_multiplex_sam_cell]

[bsf.analyses.picard.IlluminaMultiplexSam.Stage.illumina_multiplex_sam_lane]

[bsf.analyses.picard.IlluminaMultiplexSam.Stage.illumina_multiplex_sam_cloud]


#################################
# Picard IlluminaDemultiplexSam #
#################################

[bsf.analyses.picard.IlluminaDemultiplexSam]

# Directory access mode permission bits (optional)
#
# A comma-separated list of directory access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
mode_directory = S_IRUSR, S_IXUSR, S_IRGRP, S_IXGRP, S_IROTH, S_IXOTH

# File access mode permission bits (optional)
#
# A comma-separated list of file access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
mode_file = S_IRUSR, S_IRGRP, S_IROTH

# Picard Compression level (optional)
#
# Set the Picard (Zlib) Compression level. Valid level range from 0 to 9.
#
# Defaults to the Picard default setting, currently 5.
#
# compression_level =

# Deflater (compression) threads (optional)
#
# Set the number of deflater (compression) threads.
#
# Defaults to None.
#
# deflater_threads =

# Matching threads (optional)
#
# Set the number of matching threads.
#
# Defaults to None.
#
# matching_threads =


# Lane list (optional)
#
# A comma-separated list of lane numbers ot process.
#
# Defaults to an empty list.
#
# lane_list =

[bsf.analyses.picard.IlluminaDemultiplexSam.Stage]

[bsf.analyses.picard.IlluminaDemultiplexSam.Stage.illumina_demultiplex_sam_cell]

[bsf.analyses.picard.IlluminaDemultiplexSam.Stage.illumina_demultiplex_sam_lane]
memory_hard = 4G
queue =
time_limit = 7-00:00:00
threads = 8


#####################
# Picard SamToFastq #
#####################

[bsf.analyses.picard.SamToFastq]

# Picard Java Archive Path (optional)
#
# The Java Archive (JAR) file path for the Picard package.
#
# Defaults to the value of bsf.standards.JavaArchive.get_picard(),
# which is configured via the "picard" option in the "java_archive" section of the
# global configuration file.
#
# java_archive_picard =

# Drop include non-pass filter reads (optional)
#
# Defaults to false to exclude non-pass filter reads.
#
# include_non_pass_filter_reads =

# Drop read 1 (optional)
#
# Defaults to false to not drop the read.
#
# drop_read_1 = false

# Drop read 2 (optional)
#
# Defaults to false to not drop the read.
#
# drop_read_2 = false

[bsf.analyses.picard.SamToFastq.Stage]

[bsf.analyses.picard.SamToFastq.Stage.picard_sam_to_fastq_read_group]
memory_hard = 3G
queue = mediumq
time_limit = 1-00:00:00

[bsf.analyses.picard.SamToFastq.Stage.picard_sam_to_fastq_project]
memory_hard = 1G
queue = shortq
time_limit = 01:00:00


###############
# Trimmomatic #
###############

# Global configuration for the Trimmomatic class.
# Please see doc/template_trimmomatic_config.ini for details.

[bsf.analyses.trimmomatic.Trimmomatic]
java_archive_trimmomatic =

[bsf.analyses.trimmomatic.Trimmomatic.Stage]

[bsf.analyses.trimmomatic.Trimmomatic.Stage.trimmomatic_read_group]
memory_hard =
queue =
time_limit =

[bsf.analyses.trimmomatic.Trimmomatic.Stage.trimmomatic_summary]
memory_hard =
queue =
time_limit =

[bsf.analyses.trimmomatic.Trimmomatic.Stage.trimmomatic_project]
memory_hard =
queue =
time_limit =


######################
# VariantCallingGATK #
######################

# Global configuration for the VariantCallingGATK class.
# Please see doc/template_variant_calling_config.ini for details.

[bsf.analyses.variant_calling.VariantCallingGATK]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_align_lane]
threads = 4

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_process_lane]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_process_sample]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_diagnose_sample]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_merge_cohort]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_process_cohort]
memory_hard = 16G
threads = 4

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_split_cohort]
memory_hard = 3G

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_summary]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_somatic]
memory_hard = 10G
time_limit = 28-00:00:00
