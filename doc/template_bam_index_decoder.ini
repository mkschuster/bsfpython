# Copyright 2013 - 2021 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.
#
#
# BSF Python configuration template for the bsf.analyses.illumina_to_bam_tools.BamIndexDecoder class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.illumina_to_bam_tools.BamIndexDecoder]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# analysis output directory defined via the "output_directory" option below.
#
# In the context of BamIndexDecoder conversion, the project name is set to the
# flow cell identifier, which is a concatenation of the experiment name and
# the flow cell barcode. It is also the name of the sub-directory in the
# central sequence store, the sequences directory obtained from
# bsf.standards.StandardFilePath.get_sequences(absolute=True),
# which is configured via the "sequences" option of the "directories" section
# of the global configuration file.

project_name =

# Cache Directory Path (optional)
#
# The cache directory is used by the bsf.procedure.Runnable and its
# sub-classes to copy certain files to a local cache such as the shared memory
# or the temporary directory for performance reasons.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_cache(),
# which is based on the "cache" option of the "directories" section of the
# global configuration file. If set to an empty string, a cache directory will
# not be used.
#
# cache_directory =

# Input Directory Path (optional)
#
# The analysis input directory, which is used to initialise the NGS Collection
# and thus to look up Sample, ReadGroup and Reads file paths.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_samples(absolute=True),
# which is configured via the "sample" option in the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# input_directory =

# Output Directory Path (optional)
#
# The analysis output directory.
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_projects(absolute=True),
# which is based on the "projects" option of the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# output_directory =

# Report Style File Path (optional)
#
# A custom Cascading Style Sheet file path.
# The custom style sheet will be included in <style type="text/css"> HTML elements in the
# HTML <header> element and replace the one coded into the bsf.analysis.Analysis module.
#
# Defaults to an empty value, upon which a style sheet coded into the bsf.analysis.Analysis module will be included.
#
# report_style_path =

# Report Header File Path (optional)
#
# A fragment of HTML including complete <p> elements to be included in the header section of the Analysis report.
#
# Defaults to an empty value.
#
# report_header_path =

# Report Footer File Path (optional)
#
# A fragment of HTML including complete <p> elements to be included in the footer section of the Analysis report.
#
# Defaults to an empty value.
#
# report_footer_path =

# Hash-based algorithm (optional)
#
# Use a hash-based demultiplexing algorithm, which is a BSF-specific extension to the BamIndexDecoder code.
#
# Defaults to false.
#
# hash_algorithm =

# Library Annotation File (optional)
#
# A library annotation file specifies in comma-separated value format
# information required for de-multiplexing of BAM files created with
# Illumina2bam.
#
# Column names:
#   lane
#   barcode_sequence_1
#   barcode_sequence_2
#   sample_name
#   library_name
#
# Defaults to 'project_name'_libraries.csv, in the working directory,
# if not explicitly specified.
#
# library_path =

# Sequences Directory File Path (optional)
#
# The directory, in which the project-specific sequences directory with archive BAM files will be created.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_sequences(absolute=True).
#
# sequences_directory =

# Samples Directory File Path (optional)
#
# The directory, in which the project-specific samples directory with de-multiplexed BAM files will be created.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_samples(absolute=True).
#
# samples_directory =

# Directory access mode permission bits (optional)
#
# A comma-separated list of directory access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
# mode_directory = S_IRUSR, S_IRGRP, S_IROTH

# File access mode permission bits (optional)
#
# A comma-separated list of file access mode permission bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
# mode_file = S_IRUSR, S_IXUSR, S_IRGRP, S_IXGRP, S_IROTH, S_IXOTH

# Illumina2bam Java Class Path (optional)
#
# The Java Class Path directory of Java Archive (JAR) files for the Illumina2bam package.
#
# Defaults to the value of bsf.standards.JavaClassPath.get_illumina2bam(),
# which is configured via the "illumina2bam" option in the "java_classpath" section of the
# global configuration file.
#
# java_classpath_illumina2bam =

# Picard Java Archive Path (optional)
#
# The Java Archive (JAR) file path for the Picard package.
#
# Defaults to the value of bsf.standards.JavaArchive.get_picard(),
# which is configured via the "picard" option in the "java_archive" section of the
# global configuration file.
#
# java_archive_picard =

# Lanes (optional)
#
# The number of lanes of the flow cell, required for validating the library annotation sheet.
#
# Defaults to 8.
#
# lanes =

# Force Processing (optional)
#
# Force processing even if validation of the library annotation sheet fails.
#
# Defaults to false.
#
# force =

# A [bsf.analysis.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a description of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.illumina_to_bam_tools.BamIndexDecoder.Stage]

[bsf.analyses.illumina_to_bam_tools.BamIndexDecoder.Stage.bam_index_decoder_cell]

[bsf.analyses.illumina_to_bam_tools.BamIndexDecoder.Stage.bam_index_decoder_lane]
