# Copyright 2013 - 2021 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.
#
#
# BSF Python configuration template for the bsf.analyses.rnaseq.Tuxedo class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.rnaseq.Tuxedo]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# analysis output directory defined via the "output_directory" option below.

project_name =

# Input Directory Path (optional)
#
# The analysis input directory, which is used to initialise the NGS Collection
# and thus to look up Sample, ReadGroup and Reads file paths.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_samples(absolute=True),
# which is configured via the "sample" option in the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# input_directory =

# Output Directory Path (optional)
#
# The analysis output directory.
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_projects(absolute=True),
# which is based on the "projects" option of the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# output_directory =

# Genome Assembly Version (optional)
#
# The genome assembly version corresponds to a configuration section in the
# global configuration file and is linked to a resource directory holding the
# genome sequence, index and accessory files.
# It is also the name of a new sub-directory under the analysis output directory
# and links to UCSC Genome Browser Track Hubs.
#
# Defaults to the genome assembly version associated with the transcriptome version.
#
# genome_version =

# Sample Annotation Sheet (optional)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of
# ProcessedRunFolder, Project, Sample, PairedReads and Reads objects.
# Additionally, the file type (i.e. 'CASAVA' or 'External') can be specified
# for automatic discovery of objects in CASAVA-processed run folders.
#
# Defaults to file name "<project_name>_<genome_version>_rnaseq_samples.csv"
# or "<project_name>_<genome_version>_rnaseq_deseq_samples.csv" in the current working directory.
#
# sas_file =

# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column names.
# It can be useful to distinguish e.g. 'Control Sample' objects from
# 'Treatment Sample' objects defined within the same sample annotation sheet.
#
# Defaults to an empty string, which implies no additional prefix.
#
# sas_prefix =

# Operator e-Mail Address (optional)
#
# An operator e-mail address mainly required for UCSC Genome Browser Track Hubs.
#
# Defaults to the value of bsf.standards.Operator.get_email(), which is based on
# the "e_mail" option of the "operator" section of the global configuration file.
#
# e_mail =

# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug =

# Sample Comparison File (optional)
#
# The comparison file specifies, which samples or groups should be
# compared in the differential expression analysis.
# In case a comparison file has not been specified, only the TopHat
# and Cufflinks stage will be run providing spliced alignments,
# alignment coverage and basic expression information.
#
# A special file name *groups* or *samples* constructs the comparison sheet from
# the list of sample groups or sample names in an all-against-all time series, respectively.

cmp_file =

# TODO: The insert_size, insert_std_dev, read_length and paired_end
# options are properties of the Project or Sample objects really. The
# insert_size option specifies the DNA fragment size-selection, the
# insert_std_dev option specifies the corresponding standard
# deviation.

insert_size = 290
insert_std_dev = 20
# The sequencing read length
# TODO: Could be automatically determined from CASAVA output.
read_length = 50

# Reference Genome FASTA (optional)
#
# A FASTA file with the reference genome and corresponding Bowtie indices.
#
# Defaults to the value returned by bsf.standards.StandardFilePath.get_resource_genome_fasta_index().
#
# genome_fasta =

# Reference Genome (Bowtie2) index (optional)
#
# The path to the Bowtie2 genome index, including the suffix.
#
# Defaults to the value returned by bsf.standards.StandardFilePath.get_resource_genome_index().
#
# genome_index =

# Reference Genome sizes (optional)
#
# The path to a reference genome chromosome sizes file.
#
# Defaults to the value returned by bsf.standards.StandardFilePath.get_resource_genome_fasta_index().
#
# genome_sizes =

# Reference Transcriptome Version (mandatory)
#
# The reference transcriptome version corresponds to a resource directory
# holding the transcriptome annotation and TopHat index files.

transcriptome_version =

# Reference Transcriptome (optional)
#
# A GTF file defines the reference transcriptome. If the path is not absolute,
# standard directory paths from bsf.standards.StandardFilePath get prepended.
#
# Defaults to a transcriptome_version.gtf file.
#
# transcriptome_gtf =

# Mask Transcriptome (optional)
#
# A GTF file path that defines transcripts to be masked in the Cuffquant and CUffdiff analyses.
#
# mask_gtf =

# Multi Read Correction (optional)
#
# Multi-read correction in Cuffquant and Cuffdiff stages.
# Defaults to true so that multi-reads are corrected for.
#
# multi_read_correction =

# Library type (optional)
#
# Cuffquant and Cuffdiff RNA-seq library type "fr-unstranded" (default), "fr-firststrand" or "fr-secondstrand"
# Defaults to fr-unstranded
#
# library_type =

# False discovery rate (FDR) threshold (optional)
#
# Cuffdiff false discovery rate (FDR) threshold for assigning the significant status to "yes" or "no".

# Defaults to 0.05
#
# false_discovery_rate =

# No length correction (optional)
#
# Do not correct for transcript lengths in Cufflinks, Cuffquant and Cuffdiff analyses of
# e.g. 3-prime sequencing protocols.
#
# Defaults to false so that length correction is applied.
#
no_length_correction = false

# Novel Transcript Assembly (optional)
#
# Cufflinks can use the reference transcriptome as the basis for transcript
# assembly and optionally also assemble new transcripts.
#
# Defaults to false so that novel transcripts are *not* assembled.
#
novel_transcripts = true

# Replicate Grouping (optional)
#
# Align ReadGroup objects of a Sample object in groups:
# * true (i.e. all ReadGroup objects of a Sample as a single TopHat process) or
# * false (i.e. each ReadGroup as a separate TopHat process)

replicate_grouping = true

# Aligner (optional)
#
# Run a particular aligner 'hisat2', 'star' or 'tophat2'.
#
# Defaults to 'tophat2' alignments.
#
# aligner =

# A [bsf.analysis.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a description of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.rnaseq.Tuxedo.Stage]
# memory_hard = 2G
# queue = mediumq
# time_limit = 2-00:00:00

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_run_tophat]
# memory_hard = 16G
# queue = mediumq
# time_limit = 2-00:00:00
# Because of limitations in Tophat2, the number of threads can only be increased,
# if enough reads are available. Currently, the software does not cope well with
# threads ending up without reads.
# threads = 4

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_process_tophat]
# memory_hard = 16G
# queue = shortq
# time_limit = 04:00:00

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_run_cufflinks]
# memory_hard = 16G
# queue = mediumq
# time_limit = 2-00:00:00
# threads = 4

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_process_cufflinks]
# memory_hard = 4G
# queue = shortq
# time_limit = 04:00:00

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_cuffmerge]
# memory_hard = 6G
# queue = shortq
# time_limit = 12:00:00
# threads = 4

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_cuffquant]
# memory_hard = 8G
# queue = mediumq
# time_limit = 2-00:00:00
# threads = 4

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_cuffnorm]
# memory_hard = 64G
# queue = shortq
# time_limit = 12:00:00
# threads = 16

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_cuffdiff]
# memory_hard = 64G
# queue = shortq
# time_limit = 12:00:00
# threads = 16

[bsf.analyses.rnaseq.Tuxedo.Stage.rnaseq_process_cuffdiff]
# memory_hard = 64G
# queue = shortq
# time_limit = 12:00:00

# RunnableStep sections configure individual RunnableStep instances.

[bsf.analyses.rnaseq.Tuxedo.tophat2]
# All options in this section directly correspond to
# TopHat command line options.
# See http://tophat.cbcb.umd.edu/manual.html for reference.
#
# Default for b2-L is 20
# --b2-L = 15
# --max-multihits = 100
# The mate-inner-dist = 250 option is calculated from bsf.analyses.Tuxedo
# options read_length and insert_size above.

[bsf.analyses.rnaseq.Tuxedo.process_tophat]

[bsf.analyses.rnaseq.Tuxedo.process_cufflinks]

[bsf.analyses.rnaseq.Tuxedo.process_cuffdiff]
