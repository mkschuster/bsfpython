# Copyright 2013 - 2021 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.
#
#
# BSF Python configuration template for the bsf.analyses.variant_calling.VariantCallingGATK class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.variant_calling.VariantCallingGATK]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# analysis output directory defined via the "output_directory" option below.

project_name =

# Cache Directory Path (optional)
#
# The cache directory is used by the bsf.procedure.Runnable and its
# sub-classes to copy certain files to a local cache such as the shared memory
# or the temporary directory for performance reasons.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_cache(),
# which is based on the "cache" option of the "directories" section of the
# global configuration file. If set to an empty string, a cache directory will
# not be used.
#
# cache_directory =

# Input Directory Path (optional)
#
# The analysis input directory, which is used to initialise the NGS Collection
# and thus to look up Sample, ReadGroup and Reads file paths.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_samples(absolute=True),
# which is configured via the "sample" option in the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# input_directory =

# Output Directory Path (optional)
#
# The analysis output directory.
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_projects(absolute=True),
# which is based on the "projects" option of the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# output_directory =

# Genome Assembly Version (mandatory)
#
# The genome assembly version corresponds to a configuration section in the
# global configuration file and is linked to a resource directory holding the
# genome sequence, index and accessory files.
# It is also the name of a new sub-directory under the analysis output directory
# and links to UCSC Genome Browser Track Hubs.

genome_version =

# Sample Annotation Sheet (mandatory)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of
# ProcessedRunFolder, Project, Sample, PairedReads and Reads objects.
# Additionally, the file type (i.e. 'CASAVA' or 'External') can be specified
# for automatic discovery of objects in CASAVA-processed run folders.
#
# Defaults to file name "<project_name>_<genome_version>_variant_calling_samples.csv"
# in the current working directory.

sas_file =

# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column names.
# It can be useful to distinguish e.g. 'Control Sample' objects from
# 'Treatment Sample' objects defined within the same sample annotation sheet.
#
# Defaults to an empty string, which implies no additional prefix.
#
# sas_prefix =

# Operator e-Mail Address (optional)
#
# An operator e-mail address mainly required for UCSC Genome Browser Track Hubs.
#
# Defaults to the value of bsf.standards.Operator.get_email(), which is based on
# the "e_mail" option of the "operator" section of the global configuration file.
#
# e_mail =

# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug =

# Replicate Grouping (optional)
#
# Align BSF Sample replicates in groups:
#   true (i.e. all replicates as a single BWA process) or
#   false (i.e. each BSF Sample replicate as a separate BWA process)

replicate_grouping = false

# Genome Sequence File with BWA Index (mandatory)
#
# Genome database fasta file with indices for the Burrows Wheeler Aligner (BWA) and
# sequence dictionaries for Picard. It is convenient to create a sub-directory with
# symbolic links to the GATK bundle files and the BWA indices within the GATK bundle.

bwa_genome_db = indices_for_BWA/human_g1k_v37_decoy.fasta

# Comparison file path (optional)
#
# Comparison file path for somatic variant calls. The Comma-separated value (CSV) file
# specifies "Normal Sample Name" and optionally "Tumour Sample Name" or
# "PON Path" a file path to a Panel of Normal VCF file.
#
# Defaults to an empty string so that somatic variant calls are not performed.
#
# cmp_file =

# Accessory Cohort GVCF File Paths (optional)
#
# Comma-separated list of accessory GVCF file paths to facilitate
# Variant Quality Score Recalibration (VQSR) on a larger cohort.
# If the path is relative, the default project directory gets prepended.
#
# Defaults to an empty string so that no further cohort gets merged in.
#
# accessory_cohort_gvcfs =

# Cohort name (optional)
#
# A cohort name to label files in whole cohort-level processing steps.
#
# Defaults to the value of project_name.
#
# cohort_name =

# snpEff genome database version (mandatory)

snpeff_genome_version = GRCh37.75

# GATK Bundle version

gatk_bundle_version = 2.8

# Skip Picard MarkDuplicates (optional)
#
# Some analyses require skipping of the Picard MarkDuplicates step on both, lane and
# sample level.
#
# Defaults to false so that Picard MarkDuplicates is run.
#
# skip_mark_duplicates = true

# Skip GATK RealignerTargetCreator and GATK IndelRealigner (optional)
#
# More modern versions of GATK (>= 3.6) no longer require INDEL realignment steps,
# when relying on the GATK HaplotypeCaller and GATK MuTect2 that assemble reads.
#
# Defaults to false so that GATK RealignerTargetCreator and GATK IndelRealigner are run.
#
# skip_indel_realignment = true

# Genome Annotation (Exon) Gene Transfer Format (GTF) File (mandatory)
#
# GTF file with exon annotation to annotate non-callable loci with gene, transcript and exon identifiers,
# as well as gene symbols.

genome_annotation_gtf = Homo_sapiens_GRCh37_Ensembl_75_non_redundant.gtf

# Exclude Intervals (optional)
#
# File path to a Picard-style intervals list file ending in .intervals or
# a comma-separated list of intervals to explicitly exclude from GATK analyses.
# For human, exclude the Human herpesvirus 4 complete wild type genome and importantly,
# the hs37d5 decoy sequence.

exclude_intervals = NC_007605, hs37d5

# Include Intervals (optional)
#
# File path to a Picard-style intervals list file ending in .intervals or
# a comma-separated list of intervals to explicitly include in GATK analyses.
#
# include_intervals =

# Interval padding (optional)
#
# Padding of nucleotide positions around intervals supplied above.
#
# Defaults to 0.
#
# interval_padding = 0

# Picard ScatterIntervalsByNs Intervals Path (optional)
#
# If an interval file is provided, then tiling can be arranged on regions with Ns rather than biological sequence.
# For the human b37 assembly, Picard ScatterIntervalsByNs with MAX_TO_MERGE 1000 provides a sensible number of
# tiles.
#
# scatter_intervals_path =

# Genome tiles for scattering and chunks for gathering (optional)
#
# Number of genome tiles to scatter an analysis. Genome tiles can span sequence region (i.e. chromosome) boundaries.
# Number of chunks to gather results. A hierarchy of chunks processing this set number of tiles merges results back.
#
# number_of_tiles_cohort =
# number_of_chunks_cohort =
# number_of_tiles_cohort =
# number_of_chunks_cohort =

# Known Variant Sites for Realignment (optional)
#
# Comma-separated list of VCF files with known variant sites for the
# GATK RealignerTargetCreator and IndelRealigner steps.
# The GATK best practices documentation suggests using the
# Mills and 1000 Genomes gold standard insertion deletions for human.
# http://www.broadinstitute.org/gatk/guide/best-practices#data-processing-ovw

known_sites_realignment = 1000G_phase1.indels.b37.vcf,
                        Mills_and_1000G_gold_standard.indels.b37.vcf

# Known Variant Sites for Recalibration (optional)
#
# Comma-separated list of VCF files with known variant sites for the
# GATK BaseRecalibrator and PrintReads steps.
# The GATK best practices documentation suggests using the
# current dbSNP version in addition to the
# Mills and 1000 Genomes gold standard insertion deletions for human.

known_sites_recalibration = dbsnp_138.b37.vcf,
                          1000G_phase1.indels.b37.vcf,
                          Mills_and_1000G_gold_standard.indels.b37.vcf

# Known Variant Sites for Discovery (optional)
#
# Single VCF file of known sites for the
# GATK HaplotypeCaller and GenotypeGVCFs steps.

known_sites_discovery = dbsnp_138.b37.vcf

# Known Somatic Variant Sites for Discovery (optional)
#
# Comma-separated list of Catalogue Of Somatic Mutations In Cancer (COSMIC) VCF files for the
# GATK MuTect2 step.
#
# known_somatic_discovery =

# Truth Sensitivity Filter Level (optional)
#
# The truth sensitivity level at which to start filtering at the GATK ApplyRecalibration step.

truth_sensitivity_filter_level_snp = 99.9
truth_sensitivity_filter_level_indel = 99.9

# Skip Variant Quality Score Recalibration (VQSR) on SNPs (optional)
#
# Defaults to false so that VQSR on SNPs is performed.
# vqsr_skip_snp =

# What VQSR training sets / arguments should I use for my specific project?
# http://gatkforums.broadinstitute.org/discussion/1259

# VQSR Resources for SNPs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) resources for SNP recalibration.
# Each resource has to correspond to a section named [vqsr_snp_*], below.

vqsr_resources_snp = hapmap, omni, 1000G, dbsnp

# VQSR Annotations for SNPs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) annotations used for SNP recalibration.
# vqsr_annotations_snp = QD, MQ, MQRankSum, ReadPosRankSum, FS, DP, InbreedingCoeff
#
# ### IMPORTANT ###
# Depth of coverage (the DP annotation invoked by Coverage) should not be used when working with
# exome data sets since there is extreme variation in the depth to which targets are captured!
# In whole genome experiments this variation is indicative of error but that is not the case in
# capture experiments.
#
# ### IMPORTANT ###
# The InbreedingCoeff is a population level statistic that requires at least 10 samples in order to be
# computed. For projects with fewer samples please omit this annotation from the command line.

vqsr_annotations_snp = QD, MQ, MQRankSum, ReadPosRankSum, FS, DP, InbreedingCoeff

# Skip Variant Quality Score Recalibration (VQSR) on INDELs (optional)
#
# Defaults to false so that VQSR on INDELs is performed.
# vqsr_skip_indel =

# VQSR Resources for INDELs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) resources for INDEL recalibration.
# Each resource has to correspond to a section named [vqsr_indel_*], below.

vqsr_resources_indel = dbsnp

# VQSR Annotations for INDELs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) annotations used for INDEL recalibration.

vqsr_annotations_indel = QD, DP, FS, ReadPosRankSum, MQRankSum, InbreedingCoeff

# VQSR Maximum Number of Gaussians in the positive training for INDELs (optional)
#
# GATK VariantRecalibrator defaults to 8
#
# vqsr_max_gaussians_pos_indel =

# VQSR Maximum Number of Gaussians in the positive training for SNPs (optional)
#
# GATK VariantRecalibrator defaults to 8, but for successful INDEL recalibration 4 is the default.
#
# vqsr_max_gaussians_pos_snp =


# Ensembl Variant Effect Predictor (VEP)
#
# Annotation type (optional)
#
# The annotation type can be 'ensembl', 'refseq' or 'merged'.
#
# Defaults to 'ensembl'.
#
# vep_annotation =

# Ensembl genome assembly version (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_name_assembly()
#
# vep_assembly = GRCh37

# Ensembl species name (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_name_species()
#
# vep_species = homo_sapiens

# Cache directory (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_directory_cache()
#
# vep_cache =

# FASTA directory (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_directory_fasta()
#
# vep_fasta =

# Plug-ins directory (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_directory_plugin()
#
# vep_plugin =

# Source directory (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_directory_source()
#
# vep_source =

# SQL database user name (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_sql_user()
#
# vep_sql_user =

# SQL database password (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_sql_pass()
#
# vep_sql_pass =

# SQL database host (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_sql_host()
#
# vep_sql_host =

# SQL database TCP/IP port (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_sql_port()
#
# vep_sql_port = 3337

# VEP output fields configuration (TSV) file path (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_ofc_path()
#
# vep_ofc_path =

# VEP Sequence Ontology configuration (TSV) file path (optional)
#
# Defaults to the value of bsf.standards.EnsemblVEP.get_soc_path()
#
# vep_soc_path =

# Annotation Resources (optional)
#
# Comma-separated list of Variant Annotator annotation resources. (Optional)
# Each resource has to correspond to a section named [*_resource], below.
#
annotation_resources = db_snp

# Variant Quality Score Recalibration (VQSR) resource sections

[bsf.analyses.variant_calling.VariantCallingGATK.vqsr_snp_hapmap]
known = false
training = true
truth = true
prior = 15.0
file_path = hapmap_3.3.b37.vcf

[bsf.analyses.variant_calling.VariantCallingGATK.vqsr_snp_omni]
known = false
training = true
truth = true
prior = 12.0
file_path = 1000G_omni2.5.b37.vcf

[bsf.analyses.variant_calling.VariantCallingGATK.vqsr_snp_1000G]
known = false
training = true
truth = false
prior = 10.0
file_path = 1000G_phase1.snps.high_confidence.b37.vcf

[bsf.analyses.variant_calling.VariantCallingGATK.vqsr_snp_dbsnp]
known = true
training = false
truth = false
prior = 2.0
file_path = dbsnp_138.b37.vcf

[bsf.analyses.variant_calling.VariantCallingGATK.vqsr_indel_mills]
known = true
training = true
truth = true
prior = 12.0
file_path = Mills_and_1000G_gold_standard.indels.b37.vcf

[bsf.analyses.variant_calling.VariantCallingGATK.vqsr_indel_dbsnp]
known = true
training = false
truth = false
prior = 2.0
file_path = dbsnp_138.b37.vcf

# Variant annotation resource sections

[bsf.analyses.variant_calling.VariantCallingGATK.annotation_cadd]
file_path = /data/groups/lab_bsf/resources/CADD/b37/whole_genome_SNVs.vcf.gz
annotations = CADDs

[bsf.analyses.variant_calling.VariantCallingGATK.annotation_clinvar]
file_path = /data/groups/lab_bsf/resources/ClinVar/clinvar_20160405.vcf.gz
annotations = GENEINFO, PM, TPA, PMC, MUT, VLD, CDA, LSD, MTP, OM,
              CLNHGVS, CLNALLE, CLNSRC, CLNORIGIN, CLNSRCID, CLNSIG, CLNDSDB,
              CLNDSDBID, CLNDBN, CLNREVSTAT, CLNACC

[bsf.analyses.variant_calling.VariantCallingGATK.annotation_db_snp]
file_path = dbsnp_138.b37.vcf
annotations = CAF, COMMON, CLNDBN, CLNDSDBID, CLNHGVS, G5, MUT, OM, PM, SAO,
	          SSR, VC, VLD, dbSNPBuildID

[bsf.analyses.variant_calling.VariantCallingGATK.annotation_exac]
file_path = /data/groups/lab_bsf/resources/ExAC/b37/ExAC.r0.3.1.sites.vep.vcf.gz
annotations = AC_Adj, AC_Hemi, AC_Het, AC_Hom, AF, AN, AN_Adj, CCC,
              GQ_MEAN, GQ_STDDEV, HWP, MLEAC, MLEAF, AC_MALE, AC_FEMALE,
              AN_MALE, AN_FEMALE, AC_CONSANGUINEOUS, AN_CONSANGUINEOUS,
              POPMAX, clinvar_mut

# A [bsf.analysis.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a description of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.variant_calling.VariantCallingGATK.Stage]
memory_hard = 8G
time_limit = 28-00:00:00

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_align_lane]
threads = 4

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_process_lane]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_process_sample]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_diagnose_sample]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_merge_cohort]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_process_cohort]
memory_hard = 16G
threads = 4

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_annotate_cohort_snpeff]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_annotate_cohort_vep]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_split_cohort_snpeff]
memory_hard = 3G

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_split_cohort_vep]
memory_hard = 3G

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_summary]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_somatic]
memory_hard = 10G
time_limit = 28-00:00:00

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_annotate_somatic_snpeff]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_annotate_somatic_vep]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_split_somatic_snpeff]

[bsf.analyses.variant_calling.VariantCallingGATK.Stage.variant_calling_split_somatic_vep]

# RunnableStep sections configure individual RunnableStep instances.
#
# Sections with trailing dots are required for RunnableStep objects containing un-named (sub-) Command objects.
# RunnableStepGATK objects use Java, require an un-named sub Command to separate the -jar option,
# which has to come last and another un-named sub Command reflecting the GATK Analysis options.

[bsf.analyses.variant_calling.VariantCallingGATK.align_lane_bwa]
[bsf.analyses.variant_calling.VariantCallingGATK.align_lane_bwa.mem]

[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_callable_loci]
[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_callable_loci.]
[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_callable_loci..]

[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_coverage]

[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_diagnose_target]
[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_diagnose_target.]
[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_diagnose_target..]

[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_qualify_missing_intervals]
[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_qualify_missing_intervals.]
[bsf.analyses.variant_calling.VariantCallingGATK.diagnose_sample_gatk_qualify_missing_intervals..]

[bsf.analyses.variant_calling.VariantCallingGATK.annotate_cohort_ensembl_vep]
[bsf.analyses.variant_calling.VariantCallingGATK.annotate_cohort_ensembl_vep.]

[bsf.analyses.variant_calling.VariantCallingGATK.annotate_cohort_ensembl_filter]
[bsf.analyses.variant_calling.VariantCallingGATK.annotate_cohort_ensembl_filter.]
