# Copyright 2013 - 2021 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.
#
#
# BSF Python configuration template for the bsf.analyses.rnaseq.DESeq class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.rnaseq.DESeq]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# analysis output directory defined via the "output_directory" option below.

project_name =

# Input Directory Path (optional)
#
# The analysis input directory, which is used to initialise the NGS Collection
# and thus to look up Sample, ReadGroup and Reads file paths.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_samples(absolute=True),
# which is configured via the "sample" option in the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# input_directory =

# Output Directory Path (optional)
#
# The analysis output directory.
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_projects(absolute=True),
# which is based on the "projects" option of the "directories" section of the
# global configuration file.
#
# Both, user and variable expansion gets applied. If, at that point, the path
# is still relative, the above default directory path gets prepended.
#
# output_directory =

# Genome Assembly Version (optional)
#
# The genome assembly version corresponds to a configuration section in the
# global configuration file and is linked to a resource directory holding the
# genome sequence, index and accessory files.
# It is also the name of a new sub-directory under the analysis output directory
# and links to UCSC Genome Browser Track Hubs.
#
# Defaults to the genome assembly version associated with the transcriptome version.
#
# genome_version =

# Sample Annotation Sheet (optional)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of
# ProcessedRunFolder, Project, Sample, PairedReads and Reads objects.
# Additionally, the file type (i.e. 'CASAVA' or 'External') can be specified
# for automatic discovery of objects in CASAVA-processed run folders.
#
# Defaults to file name "<project_name>_<genome_version>_rnaseq_samples.csv"
# in the current working directory.
#
# sas_file =

# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column names.
# It can be useful to distinguish e.g. 'Control Sample' objects from
# 'Treatment Sample' objects defined within the same sample annotation sheet.
#
# Defaults to an empty string, which implies no additional prefix.
#
# sas_prefix =

# Operator e-Mail Address (optional)
#
# An operator e-mail address mainly required for UCSC Genome Browser Track Hubs.
#
# Defaults to the value of bsf.standards.Operator.get_email(), which is based on
# the "e_mail" option of the "operator" section of the global configuration file.
#
# e_mail =

# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug =

# Sample Comparison File (optional)
#
# The design annotation sheet specifies, which formulas should be used for the
# differential expression modelling.
#
# Defaults to file name "<project_name>_<assembly_version>_rnaseq_designs.csv"
# in the current working directory.
#
# cmp_file =

# Contrast Annotation Sheet (optional)
#
# The contrast annotation sheet specifies, which contrasts (i.e. meaningful biological comparisons)
# should be extracted from the generalised linear model (GLM) in a design-specific manner.
#
# Defaults to file name "<project_name>_<assembly_version>_rnaseq_contrasts.csv"
# in the current working directory.
#
# ctr_file =

# Reference Transcriptome (optional)
#
# A GTF file defines the reference transcriptome. If the path is not absolute,
# standard directory paths from bsf.standards.StandardFilePath get prepended.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_resource_transcriptome_gtf().
#
# transcriptome_gtf =

# Reference Transcriptome Version (mandatory)
#
# The reference transcriptome version corresponds to a resource directory
# holding the transcriptome annotation and STAR index files.

transcriptome_version =

# Adjusted p-value threshold (optional)
#
# The threshold value for the adjusted p-value.
#
# Defaults to 0.1 via the R script and the DESeq2 package.
#
# threshold_padj =

# Log2 fold-change threshold (optional)
#
# The threshold value for the log2 fold-change.
#
# Defaults to 0.0 via the R script and the DESeq2 package.
#
# threshold_log2fc =


# A [bsf.analysis.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a description of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.rnaseq.DESeq.Stage]
# memory_hard = 2G
# queue = shortq
# time_limit = 02:00:00

[bsf.analyses.rnaseq.DESeq.Stage.rnaseq_deseq_analysis]
# memory_hard = 96G
# queue = shortq
# time_limit = 12:00:00
# threads = 8

[bsf.analyses.rnaseq.DESeq.Stage.rnaseq_deseq_results]
# memory_hard = 64G
# queue = shortq
# time_limit = 12:00:00
# threads = 4
